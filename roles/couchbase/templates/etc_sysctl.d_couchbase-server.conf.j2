# File: templates/etc_sysctl.d/couchbase-server.conf.j2
# Kernel tunables for Couchbase Server set by Ansbile

###
### STANDARD TUNING
###

# Instructs the kernel to swap only as a last resort
vm.swappiness = 0

###
### ADDITIONAL EXPERIMENTAL TUNING
###

# RFC 1337 / time-wait assasination hazards fix 
# net.ipv4.tcp_rfc1337 = 1 

# Larger windows are good for high bandwidth*delay
# net.ipv4.tcp_window_scaling = 1

# Remote buggy TCP workaround / no effect on the local network
# net.ipv4.tcp_workaround_signed_windows = 1

# Reduce retransmit bandwidth with selective ACK
# net.ipv4.tcp_sack = 1

# Forward Acknowledgement System works with SACK 
# to improve packet loss recovery
# net.ipv4.tcp_fack = 1

# Disables MTU probing unless ICMP black hole detected 
# net.ipv4.tcp_mtu_probing = 1

# Increase OS filesystem limit for open files
# fs.file-max = 524288

# Increase processor input queue length
# net.core.netdev_max_backlog = 300000

# Per connection receive buffer and TCP window size auto tuning
# net.ipv4.tcp_moderate_rcvbuf = 1

# Better performance over high bandwidth networks than [New] Reno
# Also generally regarded as safer than cubic
# net.ipv4.tcp_congestion_control = htcp

# Increases socket listen backlog to support request bursts
# net.core.somaxconn = 40000

# Increases maximum number of remembered connection requests which 
# did not receive  an acknowledgment from connecting client
# Must be less than or equal to somaxconn or it will be truncated
net.ipv4.tcp_max_syn_backlog = 40000

# Reduce bandwidth loss on fast networks by allowing for very large windows
# net.ipv4.tcp_window_scaling = 1

# Decreases amount of time connections remain in FIN-WAIT-2 state
# Cleans up broken connections faster
# net.ipv4.tcp_fin_timeout = 15

# Increase the frequency of keepalive probes
# Helps to quickly identify and time out dead connections
# net.ipv4.tcp_keepalive_intvl = 30

# Limits the maximum memory used to 200MB before pdflush 
# The default value can overwhelm the storage system once flushed.
# vm.dirty_bytes = 209715200

# The lower threshold for vm.dirty_bytes
# vm.dirty_background_bytes = 104857600